{"version":3,"sources":["component/bookspage/bookAdder.js","component/bookspage/bookItem.js","component/bookspage/bookpage.js","component/bookupdate/bookupdatepage.js","component/router.js","App.js","serviceWorker.js","reducers/booksreducers.js","reducers/store.js","index.js"],"names":["BookAdder","props","handleClick","state","isbn","name","author","addBook","price","availability","document","getElementById","value","alert","handleChange","event","test","target","slice","length","setState","console","log","this","className","type","required","placeholder","aria-label","aria-describedby","id","onChange","e","defaultValue","onClick","Component","connect","dispatch","Math","random","BookItem","item","style","removeBook","to","BooksPage","addPageNumber","currentPage","totalPage","losePageNumber","changePage","x","dataDisplayedPerPage","indexOfLastData","indexOfFirstData","renderData","bookReducer","map","el","key","pageNumbers","i","ceil","push","renderPageNumbers","number","index","BookUpadatePage","updateBook","Number","book","filter","Router","exact","path","component","render","match","params","App","Boolean","window","location","hostname","init","action","store","createStore","combineReducers","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cc780fa5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './bookAdder.css'\r\nimport {connect} from 'react-redux'\r\nclass BookAdder extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            isbn:'',\r\n            name:'',\r\n            price:0, \r\n            availability:\"true\",\r\n            author:'',            \r\n        }\r\n    }\r\n    handleClick=()=>{\r\n        if (!this.state.isbn&&!this.state.name&&!this.state.author){\r\n            alert('plz try to fill all the field')\r\n        }\r\n        else {\r\n            this.props.addBook(this.state.isbn,this.state.name,this.state.price,this.state.availability,this.state.author)\r\n            document.getElementById('ISBN').value=''\r\n            document.getElementById('bookName').value=''\r\n            document.getElementById('Price').value=''\r\n            document.getElementById('author').value=''  \r\n        }\r\n    }\r\n    handleChange=(event)=>{\r\n        if (/^([0-9 -]{0,13})$/.test(event.target.value)===false)\r\n            { event.target.value=event.target.value.slice(0, event.target.value.length-1)}\r\n        this.setState({isbn:event.target.value})\r\n    }\r\n\r\n    render() { \r\n        console.log(this.state.isbn,this.state.name,this.state.price,this.state.availability,this.state.author)\r\n        return ( \r\n            <div className='bookspageAdder'>\r\n                <div className='container-fluid'>\r\n                    <div className='row'>  \r\n                        <div className='col-12 col-sm-6 col-md-3 col-lg-3 col-xl-3 dataInput'>  \r\n                            <input type=\"text\" required className=\"form-control\" placeholder=\"ISBN\" aria-label=\"ISBN\" aria-describedby=\"basic-addon1\" id='ISBN' onChange={this.handleChange}/>\r\n                        </div>\r\n                        <div className='col-12 col-sm-6 col-md-3 col-lg-3 col-xl-3 dataInput'>\r\n                            <input type=\"text\" required className=\"form-control\" placeholder=\"Book Name\" aria-label=\"Book Name\" aria-describedby=\"basic-addon1\" id='bookName' onChange={e=>this.setState({name:e.target.value})}/>\r\n                        </div>\r\n                        <div className='col-12 col-sm-6 col-md-3 col-lg-3 col-xl-3 dataInput'>\r\n                            <input type=\"number\" required className=\"form-control\" placeholder=\"Price $$\" aria-label=\"Price $$\" aria-describedby=\"basic-addon1\" id='Price' onChange={e=>this.setState({price:e.target.value})}/>\r\n                        </div>\r\n                        <div className='col-12 col-sm-6 col-md-3 col-lg-3 col-xl-3 dataInput'>\r\n                            <input type=\"text\" required className=\"form-control\" placeholder=\"AUTHOR\" aria-label=\"AUTHOR\" aria-describedby=\"basic-addon1\" id='author' onChange={e=>this.setState({author:e.target.value})}/>\r\n                        </div>\r\n                        <div className='col-12 col-sm-6 offset-sm-3 col-md-3 offset-md-0 col-lg-3 col-xl-3 dataInput'>\r\n                            <label >available</label>\r\n                            <select required className=\"custom-select\"  id=\"inlineFormCustomSelect\" onChange={e=>this.setState({availability:e.target.value})}>\r\n                                <option defaultValue>true</option>\r\n                                <option>false</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className='col-12 adderButton'>\r\n                            <button className='btn btn-info' onClick={this.handleClick}>Add book</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\nconst mapDispatchToProps=dispatch=>{\r\n        return{\r\n        addBook:(isbn,name,price,availability,author)=>{\r\n            dispatch({\r\n                type:'ADD_BOOK',\r\n                value:{\r\n                    id:Math.random(),\r\n                    isbn,\r\n                    name,\r\n                    price,\r\n                    availability,\r\n                    author,\r\n                }     \r\n            })\r\n        }\r\n    }\r\n} \r\nexport default connect(null,mapDispatchToProps)(BookAdder);","import React, { Component } from 'react';\r\nimport './bookitem.css'\r\nimport {connect} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nclass BookItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        var {item}=this.props\r\n        return (\r\n            <div> \r\n                <div className='bookitemContainer'>\r\n                    <span className='bookinfo'>{item.isbn}</span>                            \r\n                    <span className='bookinfo'>{item.name}</span>\r\n                    <span className='bookinfo'>{item.price}$</span>\r\n                    <div className='bookinfo'>\r\n                        {item.availability===\"true\"?<div className='square' id='stock' style={{\"backgroundColor\":\"green\"}}>\r\n                        \r\n                        </div>:\r\n                    <div className='square' id='stock' style={{\"backgroundColor\":\"red\"}}>\r\n                        \r\n                    </div>\r\n                    }\r\n                    </div>\r\n                    <span className='bookinfo'>author : {item.author}</span>\r\n                    <button className='btn btn-danger button bookinfo' onClick={()=>this.props.removeBook(item.id)}>Delete</button>\r\n                    <Link to={`/book/${ item.id }`}><button className='btn btn-success button bookinfo'>Update</button></Link> \r\n                </div>\r\n                <hr/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapDispatchToProps=dispatch=>{\r\n    return{\r\n    removeBook:(id)=>{\r\n        dispatch({\r\n            type:'REMOVE_BOOK',\r\n            id     \r\n        })\r\n    }\r\n}\r\n}\r\nexport default connect(null,mapDispatchToProps)(BookItem);","import React, { Component } from 'react';\r\nimport './bookpage.css'\r\nimport BookAdder from './bookAdder.js'\r\nimport BookItem from './bookItem.js'\r\nimport {connect} from 'react-redux'\r\nclass BooksPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            currentPage:1,\r\n            dataDisplayedPerPage:2\r\n        }\r\n        this.totalPage = 1; \r\n    }\r\n    addPageNumber = () => {\r\n        if (this.state.currentPage < this.totalPage) {\r\n            this.setState({\r\n                currentPage: this.state.currentPage + 1\r\n            })\r\n        }\r\n    }\r\n    losePageNumber = () => {\r\n        if (this.state.currentPage >= 2) {\r\n            this.setState({\r\n                currentPage: this.state.currentPage - 1\r\n            })\r\n        }\r\n    }\r\n    changePage = (x) => {\r\n        this.setState({\r\n            currentPage: x + 1,\r\n        });\r\n    }\r\n    render() { \r\n        const { currentPage, dataDisplayedPerPage } = this.state;\r\n        const indexOfLastData = currentPage * dataDisplayedPerPage;\r\n        const indexOfFirstData = indexOfLastData - dataDisplayedPerPage;\r\n        const currentDatas = this.props.bookReducer.slice(indexOfFirstData, indexOfLastData);\r\n        const renderData = currentDatas.map(el => <div key={el.id}>\r\n            <BookItem item={el}/>\r\n        </div>)\r\n        const pageNumbers = [];\r\n        for (let i = 1; i <= Math.ceil(this.props.bookReducer.length / dataDisplayedPerPage); i++) {\r\n            pageNumbers.push(i);\r\n        }\r\n        this.totalPage = pageNumbers.length\r\n        const renderPageNumbers = pageNumbers.map((number, index) => <div>\r\n            {this.state.currentPage === index + 1 ? <span\r\n                style={{ \"background-color\": \"#17a2b8\" }}\r\n                className='PaginationNumber'\r\n                key={index}\r\n                onClick={() => this.changePage(index)}>\r\n                {number}\r\n            </span> :\r\n                <span className='PaginationNumber'\r\n                    key={index}\r\n                    onClick={() => this.changePage(index)}>\r\n                    {number}\r\n                </span>\r\n            }</div>\r\n        );\r\n        return (\r\n             \r\n            <div className='bookspageContainer'>\r\n                <BookAdder/>\r\n                <div className=\"PagesNumbers col-12\">\r\n                        <span onClick={() => this.losePageNumber()}>&laquo;</span>\r\n                        {renderPageNumbers}\r\n                        <span onClick={() => this.addPageNumber()}>&raquo;</span>\r\n                </div>\r\n                <hr/>\r\n                {renderData}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps =(state)=>{\r\n    return {\r\n        bookReducer:state.bookReducer,\r\n    }\r\n} \r\nexport default connect(mapStateToProps)(BooksPage);","import React, { Component } from 'react';\r\nimport './bookupdatepage.css';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom'\r\nclass BookUpadatePage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            isbn:'',\r\n            name:'',\r\n            price:0,\r\n            availability:'true',\r\n            author:''\r\n        }\r\n        this.book = this.props.bookReducer.filter(el=>el.id===Number(this.props.id))\r\n    }\r\n    handleClick=()=>{\r\n        this.props.updateBook(Number(this.props.id),this.state.isbn===''?this.book[0].isbn:this.state.isbn,this.state.name===''?this.book[0].name:this.state.name,!this.state.price?this.book[0].price:this.state.price,this.state.availability===''?this.book[0].availability:this.state.availability,this.state.author===''?this.book[0].author:this.state.author)\r\n        document.getElementById('ISBN').value=''\r\n        document.getElementById('bookName').value=''\r\n        document.getElementById('Price').value=''\r\n        document.getElementById('author').value=''  \r\n    }\r\n    handleChange=(event)=>{\r\n        if (/^([0-9 -]{0,13})$/.test(event.target.value)===false)\r\n            { event.target.value=event.target.value.slice(0, event.target.value.length-1)}\r\n        this.setState({isbn:event.target.value})\r\n    }\r\n    render() {\r\n        // console.log(this.props)\r\n        console.log(this.book)\r\n        console.log(this.state.isbn,this.state.name,this.state.price,this.state.availability,this.state.author)\r\n        return ( \r\n            <div className='bookupdateContainer'>\r\n                <div className='container-fluid'>\r\n                    <div className='row'>  \r\n                        <div className='col-12 inputcontainer'>  \r\n                            <input type=\"text\" required defaultValue={this.book[0].isbn} className=\"form-control bookdescriptioninput\" placeholder=\"ISBN\" aria-label=\"ISBN\" aria-describedby=\"basic-addon1\" id='ISBN' onChange={this.handleChange}/>\r\n                        </div>\r\n                        <div className='col-12 inputcontainer'>\r\n                            <input type=\"text\" required defaultValue={this.book[0].name} className=\"form-control bookdescriptioninput\" placeholder=\"Book Name\" aria-label=\"Book Name\" aria-describedby=\"basic-addon1\" id='bookName' onChange={e=>this.setState({name:e.target.value})}/>\r\n                        </div>\r\n                        <div className='col-12 inputcontainer'>\r\n                            <input type=\"number\" required defaultValue={this.book[0].price} className=\"form-control bookdescriptioninput\" placeholder=\"Price $$\" aria-label=\"Price $$\" aria-describedby=\"basic-addon1\" id='Price' onChange={e=>this.setState({price:e.target.value})}/>\r\n                        </div>\r\n                        <div className='col-12 inputcontainer'>\r\n                            <input type=\"text\" required defaultValue={this.book[0].author} className=\"form-control bookdescriptioninput\" placeholder=\"AUTHOR\" aria-label=\"AUTHOR\" aria-describedby=\"basic-addon1\" id='author' onChange={e=>this.setState({author:e.target.value})}/>\r\n                        </div>\r\n                        <div className='col-12'>\r\n                            <p >available</p>\r\n                            <select required className=\"custom-select bookdescriptioninput\"  id=\"inlineFormCustomSelect\" onChange={e=>this.setState({availability:e.target.value})}>\r\n                                <option defaultValue>true</option>\r\n                                <option>false</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className='col-12 adderButton'>\r\n                            <Link to='/'><button className='btn btn-info' onClick={this.handleClick}>update book</button></Link>\r\n                        </div>\r\n                    </div>\r\n                </div>  \r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapDispatchToProps=dispatch=>{\r\n    return{\r\n    updateBook:(id,isbn,name,price,availability,author)=>{\r\n        dispatch({\r\n            type:'MODIF_BOOK',\r\n            value:{\r\n                id,\r\n                isbn,\r\n                name,\r\n                price,\r\n                availability,\r\n                author,\r\n            }     \r\n        })\r\n    }\r\n}\r\n}\r\nconst mapStateToProps=(state)=>{\r\n    return {\r\n        bookReducer:state.bookReducer,\r\n    }\r\n} \r\nexport default connect(mapStateToProps,mapDispatchToProps)(BookUpadatePage);","import React, { Component } from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport BooksPage from './bookspage/bookpage.js'\r\nimport BookUpdatePage from './bookupdate/bookupdatepage.js'\r\nclass Router extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <Route exact path='/' component={BooksPage}/>\r\n                <Route exact path='/book/:id' render={(props)=><BookUpdatePage id={props.match.params.id}/>}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Router;","import React from 'react';\nimport './App.css';\nimport {BrowserRouter} from 'react-router-dom'\nimport Router from './component/router.js'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Router/>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const init = [\r\n    {\r\n        id:0,\r\n        isbn:\"0-7431-00-22\",\r\n        name:\"my first book\",\r\n        price:10, \r\n        availability:\"false\", \r\n        author:\"adel\"\r\n    },\r\n    {\r\n        id:1,\r\n        isbn:\"0-7431-00-23\",\r\n        name:\"my second book\",\r\n        price:10, \r\n        availability:\"true\", \r\n        author:\"adel\"\r\n    },\r\n    {\r\n        id:2,\r\n        isbn:\"0-7431-00-24\",\r\n        name:\"my third book\",\r\n        price:10, \r\n        availability:\"true\", \r\n        author:\"adel\"\r\n    }\r\n]\r\n\r\n\r\nconst bookReducer = (state = init, action) => {\r\n    switch (action.type) {\r\n        case \"REMOVE_BOOK\":\r\n            return state.filter(el => el.id !== action.id)\r\n        case ('ADD_BOOK'):\r\n            return [...state, action.value];\r\n        case 'MODIF_BOOK':\r\n            return state.map(el => el.id !== action.value.id ? el : action.value);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default bookReducer; ","import {combineReducers,createStore} from 'redux'\r\nimport bookReducer from './booksreducers.js'\r\nconst store = createStore(combineReducers({\r\n    bookReducer, \r\n}), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n\r\nexport default store; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux'\nimport store from './reducers/store.js'\nReactDOM.render(\n<Provider store={store}>\n    <App />\n</Provider>, \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}